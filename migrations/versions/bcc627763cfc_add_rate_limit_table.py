"""Add rate limit table

Revision ID: bcc627763cfc
Revises: 56b69f39cacf
Create Date: 2025-02-18 18:20:43.570165

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "bcc627763cfc"
down_revision: Union[str, None] = "56b69f39cacf"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "rate_limit",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("endpoint", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_rate_limit_endpoint"), "rate_limit", ["endpoint"], unique=False
    )
    op.create_index(
        op.f("ix_rate_limit_user_id"), "rate_limit", ["user_id"], unique=False
    )
    op.alter_column("user", "email", existing_type=sa.VARCHAR(), nullable=False)
    op.create_unique_constraint(None, "user", ["email"])
    op.create_unique_constraint(None, "user", ["username"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "user", type_="unique")
    op.drop_constraint(None, "user", type_="unique")
    op.alter_column("user", "email", existing_type=sa.VARCHAR(), nullable=True)
    op.drop_index(op.f("ix_rate_limit_user_id"), table_name="rate_limit")
    op.drop_index(op.f("ix_rate_limit_endpoint"), table_name="rate_limit")
    op.drop_table("rate_limit")
    # ### end Alembic commands ###
