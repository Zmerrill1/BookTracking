"""Update user book status models

Revision ID: 2e3f7780d24b
Revises: 2ab73586da75
Create Date: 2025-01-25 17:33:21.022588

"""

from typing import Sequence, Union

from alembic import op
from sqlalchemy.dialects.postgresql import ENUM

# revision identifiers, used by Alembic.
revision: str = "2e3f7780d24b"
down_revision: Union[str, None] = "2ab73586da75"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

status_enum = ENUM(
    "READING", "COMPLETED", "TO_READ", name="statusenum", create_type=False
)


def upgrade() -> None:
    status_enum.create(op.get_bind(), checkfirst=True)

    op.execute(
        "ALTER TABLE userbookstatus ALTER COLUMN status TYPE statusenum USING status::text::statusenum"
    )
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_index(
        op.f("ix_userbookstatus_book_id"), "userbookstatus", ["book_id"], unique=False
    )
    op.create_index(
        op.f("ix_userbookstatus_status"), "userbookstatus", ["status"], unique=False
    )
    op.create_index(
        op.f("ix_userbookstatus_user_id"), "userbookstatus", ["user_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_userbookstatus_user_id"), table_name="userbookstatus")
    op.drop_index(op.f("ix_userbookstatus_status"), table_name="userbookstatus")
    op.drop_index(op.f("ix_userbookstatus_book_id"), table_name="userbookstatus")

    op.execute(
        "ALTER TABLE userbookstatus ALTER COLUMN status TYPE VARCHAR USING status::text"
    )

    status_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
