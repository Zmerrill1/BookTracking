"""Slight changes added StatusEnum and Index

Revision ID: ec41c43a570c
Revises: 2ab73586da75
Create Date: 2025-01-25 16:31:43.083677

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'ec41c43a570c'
down_revision: Union[str, None] = '2ab73586da75'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bookgenrelink')
    op.drop_table('genre')
    op.add_column('book', sa.Column('authors', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('book', sa.Column('publisher', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.drop_column('book', 'rating')
    op.drop_column('book', 'author')
    op.drop_column('book', 'page_count')
    op.drop_index('ix_user_username', table_name='user')
    op.drop_constraint('user_email_key', 'user', type_='unique')
    op.drop_column('userbookstatus', 'id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('userbookstatus', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.create_unique_constraint('user_email_key', 'user', ['email'])
    op.create_index('ix_user_username', 'user', ['username'], unique=True)
    op.add_column('book', sa.Column('page_count', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('book', sa.Column('author', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('book', sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_column('book', 'publisher')
    op.drop_column('book', 'authors')
    op.create_table('genre',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('genre_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name='genre_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('bookgenrelink',
    sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('genre_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], name='bookgenrelink_book_id_fkey'),
    sa.ForeignKeyConstraint(['genre_id'], ['genre.id'], name='bookgenrelink_genre_id_fkey'),
    sa.PrimaryKeyConstraint('book_id', 'genre_id', name='bookgenrelink_pkey')
    )
    # ### end Alembic commands ###
